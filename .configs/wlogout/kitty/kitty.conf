# vim:fileencoding=utf-8:foldmethod=marker

################################################################
#
#  ‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó
#  ‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù
#  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë      ‚ñà‚ñà‚ïë    ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù 
#  ‚ñà‚ñà‚ïî‚ïê‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë      ‚ñà‚ñà‚ïë     ‚ïö‚ñà‚ñà‚ïî‚ïù  
#  ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë      ‚ñà‚ñà‚ïë      ‚ñà‚ñà‚ïë   
#  ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù      ‚ïö‚ïê‚ïù      ‚ïö‚ïê‚ïù   
#
###############################################################

# way easier to pick a theme simply by ```kitty +kitten themes''' 
include ~/.config/kitty/current-theme.conf


# --------------------------------------------------------

#: Fonts ----------------------------------------{{{

font_family      Hack Regular
bold_font        auto
italic_font      auto
bold_italic_font auto
font_size 12
force_ltr no
disable_ligatures never
box_drawing_scale 0.001, 1, 1.5, 2


#: You can specify different fonts for the bold/italic/bold-italic variants.
#:     font_family      Operator Mono Book
#:     bold_font        Operator Mono Medium
#:     italic_font      Operator Mono Book Italic
#:     bold_italic_font Operator Mono Medium Italic

#: The style with which undercurls are rendered. This option takes the
#: form (thin|thick)-(sparse|dense). Thin and thick control the thickness of the undercurl.
#: Sparse and dense control how often the curl oscillates. 
undercurl_syle thin-sparse

#: }}}


#: Cursor customization ------------------------{{{

#: The cursor shape can be one of block, beam, underline.
cursor_shape beam
cursor_beam_thickness 1.5
cursor_underline_thickness 2.0
cursor_blink_interval -1
cursor_stop_blinking_after 15.0

#: Stop blinking cursor after the specified number of seconds of
#: keyboard inactivity. Set to zero to never stop blinking.


#: }}}


#: Scrollback ----------------------------------{{{

#: Memory is allocated on demand. Negative numbers are (effectively)
#: infinite scrollback. using very large scrollback is not
#: recommended as it can slow down performance of the terminal and
#: also use large amounts of RAM. Instead, consider using
#: scrollback_pager_history_size. 
scrollback_lines 5000
scrollback_pager less --chop-long-lines --RAW-CONTROL-CHARS +INPUT_LINE_NUMBER

#: Separate scrollback history size (in MB), used only for browsing
#: the scrollback buffer with pager. This separate buffer is not
#: available for interactive scrolling but will be piped to the pager
#: program when viewing scrollback buffer in a separate window. The
#: current implementation stores the data in UTF-8, so approximatively
#: 10000 lines per megabyte at 100 chars per line, for pure ASCII,
#: unformatted text. A value of zero or less disables this feature.
#: The maximum allowed size is 4GB. Note that on config reload if this
#: is changed it will only affect newly created windows, not existing
#: ones.
scrollback_pager_history_size 0

scrollback_fill_enlarged_window no
wheel_scroll_multiplier 5.0
wheel_scroll_min_lines 1
touch_scroll_multiplier 1.0

#: }}}


#: Mouse -----------------------------------------{{{

#: Hide mouse cursor after the specified number of seconds of the
#: mouse not being used. Set to zero to disable mouse cursor hiding.
#: Set to a negative value to hide the mouse cursor immediately when
#: typing text. 
mouse_hide_wait 3.0
url_style curly
open_url_with default
#: set of URL prefixes to look for when detecting a URL under mouse cursor
url_prefixes file ftp ftps gemini git gopher http https irc ircs kitty mailto news sftp ssh
detect_urls yes
#: url_excluded_characters
show_hyperlink_targets no
copy_on_select no
paste_actions quote-urls-at-prompt
strip_trailing_spaces never
#: select_by_word_characters_forward
click_interval -1.0
focus_follows_mouse no
pointer_shape_when_grabbed arrow
default_pointer_shape beam
pointer_shape_when_dragging beam
clear_all_mouse_actions no
#: click the link under the mouse cursor
mouse_map left click ungrabbed mouse_handle_click selection link prompt
mouse_map shift+left click grabbed,ungrabbed mouse_handle_click selection link prompt
mouse_map ctrl+shift+left release grabbed,ungrabbed mouse_handle_click link
mouse_map ctrl+shift+left press grabbed discard_event
mouse_map middle release ungrabbed paste_from_selection
mouse_map left press ungrabbed mouse_selection normal
mouse_map ctrl+alt+left press ungrabbed mouse_selection rectangle
mouse_map left doublepress ungrabbed mouse_selection word
mouse_map left triplepress ungrabbed mouse_selection line
mouse_map ctrl+alt+left triplepress ungrabbed mouse_selection line_from_point
mouse_map right press ungrabbed mouse_selection extend
mouse_map shift+middle release ungrabbed,grabbed paste_selection
mouse_map shift+middle press grabbed discard_event
mouse_map shift+left press ungrabbed,grabbed mouse_selection normal
mouse_map ctrl+shift+alt+left press ungrabbed,grabbed mouse_selection rectangle
mouse_map shift+left doublepress ungrabbed,grabbed mouse_selection word
mouse_map shift+left triplepress ungrabbed,grabbed mouse_selection line
mouse_map ctrl+shift+alt+left triplepress ungrabbed,grabbed mouse_selection line_from_point
mouse_map shift+right press ungrabbed,grabbed mouse_selection extend
mouse_map ctrl+shift+right press ungrabbed mouse_show_command_output

#::  Requires shell integration
#::  <https://sw.kovidgoyal.net/kitty/shell-integration/> to work.

#: }}}


#: Performance tuning --------------------------{{{

#: Delay between screen updates (in milliseconds). Decreasing it,
#: increases frames-per-second (FPS) at the cost of more CPU usage.
repaint_delay 10
input_delay 3
sync_to_monitor yes

#: }}}


#: Terminal bell -------------------------------{{{


#: The audio bell. Useful to disable it in environments that require silence.
enable_audio_bell no
visual_bell_duration 0.0
window_alert_on_bell yes
bell_on_tab "üîî "
command_on_bell none

#: Path to a sound file to play as the bell sound. Must be in a format supported by os
#: such as WAV or OGA on Linux, (libcanberra) or AIFF, MP3 or WAV on macOS (NSSound)
bell_path none

#: }}}


#: Window ---------------------------------------{{{

remember_window_size  yes
initial_window_width  640
initial_window_height 400
enabled_layouts *
window_resize_step_cells 2
window_resize_step_lines 2
window_border_width 0.5pt
draw_minimal_borders yes
window_margin_width 0
single_window_margin_width -1
placement_strategy center
inactive_text_alpha 1.0
hide_window_decorations no
window_logo_path none
window_logo_position bottom-right
window_logo_alpha 0.5
resize_debounce_time 0.1

#: Choose how kitty draws a window while a resize is in progress. A
#: value of static means draw the current window contents, mostly
#: unchanged. A value of scale means draw the current window contents
#: scaled. A value of blank means draw a blank window. A value of size
#: means show the window size in cells.
resize_draw_strategy static
resize_in_steps no

#: the list of characters for visual window selection
visual_window_select_characters 1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ
confirm_os_window_close -1

#: }}}


#: Tab bar --------------------------------------{{{

tab_bar_edge bottom
tab_bar_margin_width 0.0
tab_bar_margin_height 0.0 0.0
#: The tab bar style, can be one of:
#: fade, slant, separator, powerline
tab_bar_style fade
tab_bar_align left
tab_bar_min_tabs 2
tab_switch_strategy previous
tab_fade 0.25 0.5 0.75 1
tab_separator " ‚îá"
tab_powerline_style angled
tab_activity_symbol none
tab_title_max_length 0
tab_title_template "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{title}"
active_tab_title_template none
active_tab_font_style   bold-italic
inactive_tab_font_style normal

#: }}}


#: Color scheme ---------------------------------{{{

#: the foreground and background color
# foreground #ffcee4
# background #27544e

background_opacity 0.7
background_image none
# tiled, mirror-tiled, scaled, centered or clamped
background_image_layout tiled
background_image_linear no
dynamic_background_opacity no
background_tint 0.0
background_tint_gaps 1.0
dim_opacity 0.75


#: }}}


#: Advanced ------------------------------------{{{

#: The shell program to execute. The default value of . means to use
shell .
editor .
close_on_child_death no
allow_remote_control no
listen_on none
update_check_interval 24
startup_session none
clipboard_control write-clipboard write-primary read-clipboard-ask read-primary-ask
clipboard_max_size 512
allow_hyperlinks yes
shell_integration enabled
allow_cloning ask
clone_source_strategies venv,conda,env_var,path
 # absolutely absolutely do not change this !!!!!
term xterm-kitty             

#: Specify the environment variables to be set in all child processes.
#: Using the name with an equal sign (e.g. env VAR=) will set it to
#: the empty string. Specifying only the name (e.g. env VAR) will
#: remove the variable from the child process' environment. Note that
#: environment variables are expanded recursively, for example::
#:     env VAR1=a
#:     env VAR2=${HOME}/${VAR1}/b
#: The value of VAR2 will be <path to home directory>/a/b.
# env

#: Control where kitty finds the programs to run. First in the system wide PATH, then ~/.local/bin and ~/bin. 
# exe_search_path



#: }}}


#: OS specific tweaks ---------------------------{{{
# wayland_titlebar_color system

#: Choose between Wayland and X11 backends. By default, an appropriate
#: backend based on the system state is chosen automatically. Set it
#: to x11 or wayland to force the choice. Changing this option by
#: reloading the config is not supported.
linux_display_server auto

macos_option_as_alt no
macos_hide_from_tasks no
macos_quit_when_last_window_closed no
macos_window_resizable yes
macos_thicken_font 0
macos_traditional_fullscreen no
macos_show_window_title_in all
macos_menubar_title_max_length 0
macos_custom_beam_cursor no
macos_colorspace srgb


#: }}}


#: Keyboard shortcuts ---------------------------{{{

#: <https://sw.kovidgoyal.net/kitty/keyboard-protocol/#functional>.

#: Keys are identified simply by their lowercase Unicode characters.
#: For example: a for the A key, [ for the left square bracket key,
#: For functional keys, such as Enter or Escape, the names are present at Functional key definitions
#: For modifier keys
#:  ctrl (control, ‚åÉ)
#:  shift (‚áß)
#:  alt (opt, option, ‚å•)
#:  super (cmd, command, ‚åò)


#: You can combine multiple actions to be triggered by a single
#: shortcut with combine action, using the syntax below::
#:     map key combine <separator> action1 <separator> action2 <separator> action3 ...
#: For example::
#:     map kitty_mod+e combine : new_window : next_layout
#: This will create a new window and switch to the next available layout.
#: You can use multi-key shortcuts with the syntax shown below::
#:     map key1>key2>key3 action
#: For example::
#:     map ctrl+f>2 set_font_size 20

#: Remove all shortcut definitions up to this point. 
clear_all_shortcuts no


#: Special modifier key alias for default shortcuts.
kitty_mod ctrl+shift

# ****** Clipboard ******

#: Copy to clipboard
map kitty_mod+c copy_to_clipboard
map cmd+c       copy_to_clipboard

#: Paste from clipboard
map kitty_mod+v paste_from_clipboard
map cmd+v       paste_from_clipboard

#: Paste from selection
map kitty_mod+s  paste_from_selection
map shift+insert paste_from_selection

#: Pass selection to program
map kitty_mod+o pass_selection_to_program



# ****** Window layout ****** 

#: New window
map kitty_mod+enter new_window
map cmd+enter       new_window

#::  You can open a new kitty window running an arbitrary program, for
#::  example::
#::      map kitty_mod+y launch mutt
#::      map ctrl+alt+enter launch --cwd=current
#::      map ctrl+n launch --location=neighbor
#::      map ctrl+f launch --location=first
#::  For more details, see launch
#::  <https://sw.kovidgoyal.net/kitty/launch/>.

#: New OS window
map kitty_mod+n new_os_window
map cmd+n       new_os_window

#: Close window
map kitty_mod+w close_window
map shift+cmd+d close_window
#: Next window
map kitty_mod+] next_window
#: Previous window
map kitty_mod+[ previous_window
#: Move window forward
map kitty_mod+f move_window_forward
#: Move window backward
map kitty_mod+b move_window_backward
#: Move window to top
map kitty_mod+` move_window_to_top
#: Start resizing window
map kitty_mod+r start_resizing_window
map cmd+r       start_resizing_window
#: First window
map kitty_mod+1 first_window
map cmd+1       first_window
#: Second window
map kitty_mod+2 second_window
map cmd+2       second_window
#: Third window
map kitty_mod+3 third_window
map cmd+3       third_window
#: Fourth window
map kitty_mod+4 fourth_window
map cmd+4       fourth_window



#: ****** window layout ******

#: You can also create shortcuts to switch to specific layouts::
#:     map ctrl+alt+t goto_layout tall
#:     map ctrl+alt+s goto_layout stack
#: Similarly, to switch back to the previous layout::
#:     map ctrl+alt+p last_used_layout

#: also a toggle_layout action that switches to the named
#: layout or back to the previous layout if in the named layout.
#:     map ctrl+alt+z toggle_layout stack




# ****** kitty specific bindings ******

#: Next tab
map kitty_mod+right next_tab
map shift+cmd+]     next_tab
map ctrl+tab        next_tab
#: Previous tab
map kitty_mod+left previous_tab
map shift+cmd+[    previous_tab
map ctrl+shift+tab previous_tab
#: New tab
map kitty_mod+t new_tab
map cmd+t       new_tab
#: Close tab
map kitty_mod+q close_tab
map cmd+w       close_tab
#: Close OS window
map shift+cmd+w close_os_window
#: Move tab forward
map kitty_mod+. move_tab_forward
#: Move tab backward
map kitty_mod+, move_tab_backward
#: Set tab title
map kitty_mod+alt+t set_tab_title
map shift+cmd+i     set_tab_title

#: You can also create shortcuts to go to specific tabs, with 1 being
#: the first tab and -1 being the previously active tab 
#:     map ctrl+alt+1 goto_tab 1
#:     map ctrl+alt+2 goto_tab 2
#:     map ctrl+t new_tab !neighbor [optional cmd to run]


#: Toggle fullscreen
map kitty_mod+f11 toggle_fullscreen
map ctrl+cmd+f    toggle_fullscreen

#: Unicode input
map kitty_mod+u    kitten unicode_input
map ctrl+cmd+space kitten unicode_input

#: Edit config file
map kitty_mod+f2 edit_config_file
map cmd+,        edit_config_file

#: Open the kitty command shell
map kitty_mod+escape kitty_shell window

#: Increase background opacity
map kitty_mod+a>m set_background_opacity +0.1

#: Decrease background opacity
map kitty_mod+a>l set_background_opacity -0.1

#: Make background fully opaque
map kitty_mod+a>1 set_background_opacity 1

#: Reset background opacity
map kitty_mod+a>d set_background_opacity default

#: Reset the terminal
map kitty_mod+delete clear_terminal reset active
map opt+cmd+r        clear_terminal reset active

#::  You can create shortcuts to clear/reset the terminal. For
#::  example::
#::      # Reset the terminal
#::      map f1 clear_terminal reset active
#::      # Clear the terminal screen by erasing all contents
#::      map f1 clear_terminal clear active
#::      # Clear the terminal scrollback by erasing it
#::      map f1 clear_terminal scrollback active
#::      # Scroll the contents of the screen into the scrollback
#::      map f1 clear_terminal scroll active
#::      # Clear everything up to the line with the cursor
#::      map f1 clear_terminal to_cursor active




#: Show documentation

map kitty_mod+f1 show_kitty_doc overview

#: Clear up to cursor line
map cmd+k clear_terminal to_cursor active

#: Reload kitty.conf
map kitty_mod+f5 load_config_file
map ctrl+cmd+,   load_config_file

#::  Reload kitty.conf, applying any changes since the last time it
#::  was loaded.
#::      map f5 load_config /path/to/alternative/kitty.conf

#: Debug kitty configuration
map kitty_mod+f6 debug_config
map opt+cmd+,    debug_config

#: Opens kitty website
map shift+cmd+/ open_url https://sw.kovidgoyal.net/kitty/

#: Quit kitty
map cmd+q quit


#: }}}


# --------------------------------------------------------




# BEGIN_KITTY_THEME
# YsDark
include current-theme.conf
# END_KITTY_THEME
